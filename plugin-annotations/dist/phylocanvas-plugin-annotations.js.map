{"version":3,"sources":["webpack://PhylocanvasPluginAnnotations/webpack/universalModuleDefinition","webpack://PhylocanvasPluginAnnotations/webpack/bootstrap","webpack://PhylocanvasPluginAnnotations/external \"@cgps/phylocanvas\"","webpack://PhylocanvasPluginAnnotations/./index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Angles","constants","tree","decorate","delegate","args","ctx","state","save","annotations","annotation","node","getNodeById","nodes","minx","x","miny","y","maxx","maxy","length","radius","Math","max","nodeSize","beginPath","arc","Degrees0","Degrees360","closePath","strokeStyle","stroke","fillStyle","fill","label","labelX","callout","labelY","labelFillStyle","textBaseline","textAlign","Array","isArray","fillText","fontSize","moveTo","lineTo","restore"],"mappings":"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","file":"phylocanvas-plugin-annotations.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@cgps/phylocanvas\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@cgps/phylocanvas\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhylocanvasPluginAnnotations\"] = factory(require(\"@cgps/phylocanvas\"));\n\telse\n\t\troot[\"PhylocanvasPluginAnnotations\"] = factory(root[\"@cgps/phylocanvas\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { constants } from '@cgps/phylocanvas';\nconst { Angles } = constants;\n\nexport default function (tree, decorate) {\n  decorate('postRender', (delegate, args) => {\n    const { ctx, state } = tree;\n    ctx.save();\n    for (const annotation of (state.annotations || [])) {\n      let node = tree.getNodeById(annotation.nodes[0]);\n      let minx = node.x;\n      let miny = node.y;\n      let maxx = node.x;\n      let maxy = node.y;\n      for (let i = 1; i < annotation.nodes.length; i++) {\n        node = tree.getNodeById(annotation.nodes[i]);\n        if (node.x < minx) minx = node.x;\n        if (node.y < miny) miny = node.y;\n        if (node.x > maxx) maxx = node.x;\n        if (node.y > maxy) maxy = node.y;\n      }\n      const x = (maxx + minx) / 2;\n      const y = (maxy + miny) / 2;\n      const radius = (Math.max((maxx - minx), (maxy - miny)) / 2) + state.nodeSize * 2;\n\n      ctx.beginPath();\n      ctx.arc(x, y, radius, Angles.Degrees0, Angles.Degrees360);\n      ctx.closePath();\n\n      ctx.strokeStyle = annotation.strokeStyle || state.strokeStyle;\n      ctx.stroke();\n\n      ctx.fillStyle = annotation.fillStyle || state.fillStyle;\n      ctx.fill();\n\n      if (annotation.label) {\n        const labelX = x + annotation.callout[0];\n        const labelY = y + radius + annotation.callout[1];\n        ctx.fillStyle = annotation.labelFillStyle || state.fillStyle;\n        ctx.textBaseline = 'top';\n        ctx.textAlign = 'left';\n        if (Array.isArray(annotation.label)) {\n          let i = 0;\n          for (const label of annotation.label) {\n            ctx.fillText(label, labelX, labelY + (i * state.fontSize));\n            i += 1;\n          }\n        } else {\n          ctx.fillText(annotation.label, x + annotation.callout[0], y + radius + annotation.callout[1]);\n        }\n        if (annotation.callout) {\n          ctx.beginPath();\n          ctx.moveTo(x, y + radius);\n          ctx.lineTo(x + annotation.callout[0], y + radius + annotation.callout[1]);\n          ctx.lineTo(x + annotation.callout[2], y + radius + annotation.callout[3]);\n          ctx.stroke();\n        }\n      }\n    }\n    ctx.restore();\n\n    delegate(...args);\n  });\n}\n"],"sourceRoot":""}