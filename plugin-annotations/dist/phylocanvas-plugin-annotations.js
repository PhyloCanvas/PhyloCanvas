!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("@cgps/phylocanvas")):"function"==typeof define&&define.amd?define(["@cgps/phylocanvas"],t):"object"==typeof exports?exports.PhylocanvasPluginAnnotations=t(require("@cgps/phylocanvas")):e.PhylocanvasPluginAnnotations=t(e["@cgps/phylocanvas"])}(window,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/dist/",r(r.s=1)}([function(t,r){t.exports=e},function(e,t,r){"use strict";r.r(t);var n=r(0);function o(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var l=n.constants.Angles;t.default=function(e,t){t("postRender",(function(t,r){var n=e.ctx,a=e.state;n.save();var i=!0,u=!1,f=void 0;try{for(var c,y=(a.annotations||[])[Symbol.iterator]();!(i=(c=y.next()).done);i=!0){for(var s=c.value,p=e.getNodeById(s.nodes[0]),d=p.x,v=p.y,b=p.x,g=p.y,x=1;x<s.nodes.length;x++)(p=e.getNodeById(s.nodes[x])).x<d&&(d=p.x),p.y<v&&(v=p.y),p.x>b&&(b=p.x),p.y>g&&(g=p.y);var S=(b+d)/2,h=(g+v)/2,m=Math.max(b-d,g-v)/2+2*a.nodeSize;if(n.beginPath(),n.arc(S,h,m,l.Degrees0,l.Degrees360),n.closePath(),n.strokeStyle=s.strokeStyle||a.strokeStyle,n.stroke(),n.fillStyle=s.fillStyle||a.fillStyle,n.fill(),s.label){var j=S+s.callout[0],P=h+m+s.callout[1];if(n.fillStyle=s.labelFillStyle||a.fillStyle,n.textBaseline="top",n.textAlign="left",Array.isArray(s.label)){var A=0,O=!0,w=!1,T=void 0;try{for(var _,k=s.label[Symbol.iterator]();!(O=(_=k.next()).done);O=!0){var M=_.value;n.fillText(M,j,P+A*a.fontSize),A+=1}}catch(e){w=!0,T=e}finally{try{O||null==k.return||k.return()}finally{if(w)throw T}}}else n.fillText(s.label,S+s.callout[0],h+m+s.callout[1]);s.callout&&(n.beginPath(),n.moveTo(S,h+m),n.lineTo(S+s.callout[0],h+m+s.callout[1]),n.lineTo(S+s.callout[2],h+m+s.callout[3]),n.stroke())}}}catch(e){u=!0,f=e}finally{try{i||null==y.return||y.return()}finally{if(u)throw f}}n.restore(),t.apply(void 0,o(r))}))}}])}));
//# sourceMappingURL=phylocanvas-plugin-annotations.js.map