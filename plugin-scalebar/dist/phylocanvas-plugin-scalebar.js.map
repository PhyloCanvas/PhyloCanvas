{"version":3,"sources":["webpack://PhylocanvasPluginScalebar/webpack/universalModuleDefinition","webpack://PhylocanvasPluginScalebar/webpack/bootstrap","webpack://PhylocanvasPluginScalebar/external \"@cgps/phylocanvas\"","webpack://PhylocanvasPluginScalebar/./defaults.js","webpack://PhylocanvasPluginScalebar/./index.js","webpack://PhylocanvasPluginScalebar/./draw.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","background","digits","fillStyle","fontSize","height","lineWidth","padding","position","left","bottom","strokeStyle","textAlign","textBaseline","textBaselineOffset","width","tree","decorate","delegate","args","scalebar","defaults","state","ctx","pixelRatio","utils","getPixelRatio","targetWidth","rawScale","branchScale","scale","Number","isInteger","parseFloat","toFixed","save","canvasWidth","canvas","canvasHeight","x","centre","right","error","y","top","middle","fillRect","font","fontFamily","beginPath","moveTo","lineTo","stroke","closePath","fillText","restore","draw"],"mappings":"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","file":"phylocanvas-plugin-scalebar.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@cgps/phylocanvas\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@cgps/phylocanvas\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhylocanvasPluginScalebar\"] = factory(require(\"@cgps/phylocanvas\"));\n\telse\n\t\troot[\"PhylocanvasPluginScalebar\"] = factory(root[\"@cgps/phylocanvas\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export default {\n  background: 'rgba(255, 255, 255, 0.87)',\n  digits: 2,\n  fillStyle: '#222',\n  fontSize: 13,\n  height: 16,\n  lineWidth: 1,\n  padding: 8,\n  position: {\n    left: 8,\n    bottom: 8,\n  },\n  strokeStyle: '#222',\n  textAlign: 'center',\n  textBaseline: 'bottom',\n  textBaselineOffset: 2,\n  width: 80,\n};\n","import defaults from './defaults';\nimport draw from './draw';\n\nexport default function (tree, decorate) {\n  decorate('getInitialState', (delegate, args) => {\n    const [ options ] = args;\n    const { scalebar = {} } = options;\n    return {\n      ...delegate(...args),\n      scalebar: {\n        ...defaults,\n        ...scalebar,\n      },\n    };\n  });\n\n  decorate('render', (delegate, args) => {\n    delegate(...args);\n    draw(tree);\n  });\n}\n","import { utils } from '@cgps/phylocanvas';\n\nexport default function (tree) {\n  const { scalebar } = tree.state;\n  const { position } = scalebar;\n  const ctx = tree.ctx;\n  const pixelRatio = utils.getPixelRatio(ctx);\n  const lineWidth = scalebar.lineWidth;\n  const fontSize = scalebar.fontSize;\n  const padding = scalebar.padding;\n  const height = scalebar.height;\n  const targetWidth = scalebar.width;\n  let digits = scalebar.digits;\n\n  const rawScale = targetWidth / tree.state.branchScale / tree.state.scale;\n  let scale = 0.0;\n  if (Number.isInteger(rawScale)) {\n    scale = rawScale;\n  } else {\n    while (scale === 0.0) {\n      scale = parseFloat(rawScale.toFixed(digits), 10);\n      if (scale === 0.0) digits++;\n    }\n  }\n\n  const width = targetWidth * scale / rawScale;\n\n  ctx.save();\n  ctx.scale(pixelRatio, pixelRatio);\n  const canvasWidth = ctx.canvas.width / pixelRatio;\n  const canvasHeight = ctx.canvas.height / pixelRatio;\n\n  let x = 0;\n  if (typeof position.left !== 'undefined') {\n    x = position.left;\n  } else if (typeof position.centre !== 'undefined') {\n    x = (canvasWidth / 2) - (width / 2) - padding + position.centre;\n  } else if (typeof position.right !== 'undefined') {\n    x = canvasWidth - width - position.right - (padding * 2);\n  } else {\n    tree.error(\n      'Invalid horizontal position specified. Supported values are `left`, `centre`, or `right`'\n    );\n  }\n  let y = 0;\n  if (typeof position.top !== 'undefined') {\n    y = position.top + padding;\n  } else if (typeof position.middle !== 'undefined') {\n    y = (canvasHeight / 2) - height + position.middle + padding;\n  } else if (typeof position.bottom !== 'undefined') {\n    y = canvasHeight - height - position.bottom - padding;\n  } else {\n    tree.error(\n      'Invalid vertical position specified. Supported values are `top`, `middle`, or `bottom`'\n    );\n  }\n\n  ctx.fillStyle = scalebar.background;\n  ctx.fillRect(x, y - padding, width + padding * 2, height + padding * 2);\n\n  ctx.font = `${fontSize}px ${scalebar.fontFamily || tree.state.fontFamily}`;\n  ctx.fillStyle = scalebar.fillStyle;\n  ctx.strokeStyle = scalebar.strokeStyle;\n  ctx.lineWidth = lineWidth;\n  ctx.textBaseline = scalebar.textBaseline;\n  ctx.textAlign = scalebar.textAlign;\n\n  ctx.beginPath();\n  // crossbar\n  ctx.moveTo(x + padding + lineWidth, y + lineWidth);\n  ctx.lineTo(x + width + padding - lineWidth, y + lineWidth);\n  // left pylon\n  ctx.moveTo(x + padding + lineWidth, y + lineWidth);\n  ctx.lineTo(x + padding + lineWidth, y + height);\n  // right pylon\n  ctx.moveTo(x + width + padding - lineWidth, y + lineWidth);\n  ctx.lineTo(x + width + padding - lineWidth, y + height);\n\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.fillText(\n    scale,\n    x + (width + padding * 2) / 2,\n    y + height + scalebar.textBaselineOffset\n  );\n\n  ctx.restore();\n}\n"],"sourceRoot":""}